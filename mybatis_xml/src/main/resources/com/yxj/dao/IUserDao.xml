<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yxj.dao.IUserDao">
    <!--    <resultMap id="userMap" type="com.yxj.domain.User">-->
    <!--id 标签：用于指定主键字段-->
    <!--result 标签：用于指定非主键字段-->
    <!--column 属性：用于指定数据库列名-->
    <!--property 属性：用于指定实体类属性名称-->
    <!--<id column="id" property="userId"/>-->
    <!--<result column="username" property="userName"/>-->
    <!--<result column="sex" property="userSex"/>-->
    <!--<result column="address" property="userAddress"/>-->
    <!--<result column="birthday" property="userBirthday"/>-->
    <!--    </resultMap>-->
    <!--定义user的resultMap-->
    <resultMap id="userAccountMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <!--配置user对象中accounts集合的映射-->
        <collection property="accounts" ofType="account" column="id" select="com.yxj.dao.IAccountDao.findAccountByUid">
            <id column="aid" property="id"></id>
            <result column="uid" property="uid"></result>
            <result column="money" property="money"></result>
        </collection>
    </resultMap>
    <select id="findAll" resultType="user">
        select * from user
    </select>
    <insert id="saveUser" parameterType="user">
        <!--配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user (username,address,sex,birthday)values (#{username},#{address},#{sex},#{birthday})
    </insert>
    <update id="updateUser" parameterType="user">
        update user set username=#{username},address=#{address} where id=#{id}
    </update>
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{uid}
    </delete>
    <!--***************************************************************************************-->
    <select id="findById" parameterType="Integer" resultType="user">
        select * from user where id=#{uid}
    </select>
    <select id="findByName" parameterType="String" resultType="user">
        select * from user where username like #{uname}
    </select>
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>
    <select id="findUserByVo" parameterType="QueryVo" resultType="User">
        select * from user where username like #{user.username}
    </select>
    <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <select id="findUserByCondition" resultType="user" parameterType="User">
        <!--select * from user where 1=1-->
        select * from user
        <where>
            <if test="username != null">
                and username=#{username}
            </if>
            <if test="sex != null">
                and sex=#{sex}
            </if>
        </where>
    </select>
    <select id="findUserInIds" resultType="user" parameterType="queryvo">
        select * from user
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
    <!--*******************************************************************-->
    <!--   立即加载-->
    <!--    <select id="findAccount" resultMap="userAccountMap">-->
    <!--        select * from user u LEFT outer JOIN  account a on u.id=a.uid-->
    <!--    </select>-->
    <!--    延迟加载-->
    <select id="findAccount" resultMap="userAccountMap">
            select * from user
        </select>
</mapper>